import requests 

from datetime import date, timedelta 

from bs4 import BeautifulSoup 

 

# Danh s√°ch c√°c domain d·ª± ph√≤ng 

DOMAINS = [ 

    "https://ketqua.net", 

    "https://xoso.me", 

    "https://www.minhngoc.net.vn" 

] 

 

def _fetch_from_domain(domain: str, d: date): 

    """Th·ª≠ l·∫•y d·ªØ li·ªáu t·ª´ 1 domain c·ª• th·ªÉ""" 

    date_str = d.strftime("%d-%m-%Y") 

    url = f"{domain}/xo-so-mien-bac-ngay-{date_str}" 

    print(f"üîπ Fetching: {url}") 

    try: 

        r = requests.get(url, timeout=10) 

        r.raise_for_status() 

    except Exception as e: 

        print(f"‚ö†Ô∏è Kh√¥ng truy c·∫≠p ƒë∆∞·ª£c {domain}: {e}") 

        return None 

 

    # Ph√¢n t√≠ch HTML 

    soup = BeautifulSoup(r.text, "html.parser") 

    text = soup.get_text(" ", strip=True) 

    numbers = [] 

 

    for part in text.split(): 

        if part.isdigit() and len(part) in (2, 5): 

            n2 = part[-2:] 

            if n2.isdigit(): 

                numbers.append(n2) 

 

    if len(numbers) >= 27: 

        return numbers[-27:]  # L·∫•y 27 s·ªë cu·ªëi 

    return None 

 

 

def fetch_for_date(d: date): 

    """L·∫•y k·∫øt qu·∫£ cho 1 ng√†y (t·ª± th·ª≠ nhi·ªÅu domain n·∫øu l·ªói)""" 

    for domain in DOMAINS: 

        result = _fetch_from_domain(domain, d) 

        if result: 

            print(f"‚úÖ L·∫•y th√†nh c√¥ng t·ª´ {domain}: {len(result)} s·ªë.") 

            return result 

    raise RuntimeError(f"‚ùå Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu ng√†y {d.strftime('%d-%m-%Y')} t·ª´ b·∫•t k·ª≥ domain n√†o.") 

 

 

def fetch_range(days: int): 

    """L·∫•y k·∫øt qu·∫£ trong N ng√†y g·∫ßn nh·∫•t""" 

    results = {} 

    today = date.today() 

    for i in range(days): 

        d = today - timedelta(days=i) 

        try: 

            results[d.isoformat()] = fetch_for_date(d) 

        except Exception as e: 

            print(f"‚ö†Ô∏è B·ªè qua {d}: {e}") 

    return results 
